{# Shopping Cart Page for Gadgets Zone Theme #}

{% extends "layouts.master" %}

{% block title %}{{ trans('cart.shopping_cart') }} - {{ store.name }}{% endblock %}

{% block description %}{{ trans('cart.cart_description') }}{% endblock %}

{% block body_class %}cart-page{% endblock %}

{% block content %}

{# Page Header #}
<section class="page-header">
    <div class="container">
        {# Breadcrumbs #}
        <nav class="breadcrumbs" aria-label="Breadcrumb">
            <ol class="breadcrumb-list">
                <li class="breadcrumb-item">
                    <a href="{{ store.url }}">{{ trans('common.home') }}</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    {{ trans('cart.shopping_cart') }}
                </li>
            </ol>
        </nav>
        
        {# Page Title #}
        <div class="page-header-content">
            <h1 class="page-title">{{ trans('cart.shopping_cart') }}</h1>
            <p class="page-description">{{ trans('cart.review_items') }}</p>
        </div>
    </div>
</section>

{# Cart Content #}
<section class="cart-section">
    <div class="container">
        {% if cart and cart.items %}
            {# Cart with Items #}
            <div class="cart-layout">
                {# Cart Items #}
                <div class="cart-items">
                    <div class="cart-header">
                        <h2>{{ trans('cart.cart_items') }} ({{ cart.items|length }})</h2>
                        <button class="clear-cart-btn" type="button">
                            <i class="icon-trash-2"></i>
                            {{ trans('cart.clear_cart') }}
                        </button>
                    </div>
                    
                    <div class="cart-items-list">
                        {% for item in cart.items %}
                            <div class="cart-item" data-item-id="{{ item.id }}">
                                <div class="item-image">
                                    <a href="{{ item.product.url }}">
                                        <img src="{{ item.product.image }}" alt="{{ item.product.name }}" loading="lazy">
                                    </a>
                                </div>
                                
                                <div class="item-details">
                                    <div class="item-info">
                                        <h3 class="item-name">
                                            <a href="{{ item.product.url }}">{{ item.product.name }}</a>
                                        </h3>
                                        
                                        {% if item.variant %}
                                            <p class="item-variant">{{ item.variant.name }}</p>
                                        {% endif %}
                                        
                                        {% if item.options %}
                                            <div class="item-options">
                                                {% for option in item.options %}
                                                    <span class="item-option">
                                                        <strong>{{ option.name }}:</strong> {{ option.value }}
                                                    </span>
                                                {% endfor %}
                                            </div>
                                        {% endif %}
                                        
                                        <div class="item-meta">
                                            <span class="item-sku">{{ trans('product.sku') }}: {{ item.product.sku }}</span>
                                            {% if item.product.in_stock %}
                                                <span class="item-stock in-stock">
                                                    <i class="icon-check-circle"></i>
                                                    {{ trans('product.in_stock') }}
                                                </span>
                                            {% else %}
                                                <span class="item-stock out-of-stock">
                                                    <i class="icon-x-circle"></i>
                                                    {{ trans('product.out_of_stock') }}
                                                </span>
                                            {% endif %}
                                        </div>
                                    </div>
                                    
                                    <div class="item-actions">
                                        <div class="quantity-controls">
                                            <button class="quantity-btn quantity-decrease" data-item-id="{{ item.id }}">
                                                <i class="icon-minus"></i>
                                            </button>
                                            <input 
                                                type="number" 
                                                class="quantity-input" 
                                                value="{{ item.quantity }}" 
                                                min="1" 
                                                max="{{ item.product.stock_quantity|default(99) }}"
                                                data-item-id="{{ item.id }}"
                                            >
                                            <button class="quantity-btn quantity-increase" data-item-id="{{ item.id }}">
                                                <i class="icon-plus"></i>
                                            </button>
                                        </div>
                                        
                                        <div class="item-secondary-actions">
                                            {% if user.is_logged %}
                                                <button class="action-btn move-to-wishlist" data-item-id="{{ item.id }}">
                                                    <i class="icon-heart"></i>
                                                    {{ trans('cart.move_to_wishlist') }}
                                                </button>
                                            {% endif %}
                                            <button class="action-btn remove-item" data-item-id="{{ item.id }}">
                                                <i class="icon-trash-2"></i>
                                                {{ trans('cart.remove') }}
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="item-pricing">
                                    <div class="item-price">
                                        <span class="current-price">{{ item.price|currency }}</span>
                                        {% if item.original_price and item.original_price > item.price %}
                                            <span class="original-price">{{ item.original_price|currency }}</span>
                                        {% endif %}
                                    </div>
                                    <div class="item-total">
                                        <span class="total-label">{{ trans('cart.total') }}:</span>
                                        <span class="total-price">{{ (item.price * item.quantity)|currency }}</span>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                    
                    {# Continue Shopping #}
                    <div class="continue-shopping">
                        <a href="{{ store.url }}/products" class="btn btn-secondary">
                            <i class="icon-arrow-left"></i>
                            {{ trans('cart.continue_shopping') }}
                        </a>
                    </div>
                </div>
                
                {# Cart Summary #}
                <div class="cart-summary">
                    <div class="summary-card">
                        <h3 class="summary-title">{{ trans('cart.order_summary') }}</h3>
                        
                        <div class="summary-details">
                            <div class="summary-row">
                                <span class="summary-label">{{ trans('cart.subtotal') }}</span>
                                <span class="summary-value">{{ cart.subtotal|currency }}</span>
                            </div>
                            
                            {% if cart.discount > 0 %}
                                <div class="summary-row discount">
                                    <span class="summary-label">{{ trans('cart.discount') }}</span>
                                    <span class="summary-value">-{{ cart.discount|currency }}</span>
                                </div>
                            {% endif %}
                            
                            <div class="summary-row">
                                <span class="summary-label">{{ trans('cart.shipping') }}</span>
                                <span class="summary-value">
                                    {% if cart.shipping_cost > 0 %}
                                        {{ cart.shipping_cost|currency }}
                                    {% else %}
                                        {{ trans('cart.free') }}
                                    {% endif %}
                                </span>
                            </div>
                            
                            <div class="summary-row">
                                <span class="summary-label">{{ trans('cart.tax') }}</span>
                                <span class="summary-value">{{ cart.tax|currency }}</span>
                            </div>
                            
                            <div class="summary-row total">
                                <span class="summary-label">{{ trans('cart.total') }}</span>
                                <span class="summary-value">{{ cart.total|currency }}</span>
                            </div>
                        </div>
                        
                        {# Promo Code #}
                        <div class="promo-code-section">
                            <div class="promo-code-toggle">
                                <button type="button" class="promo-toggle-btn">
                                    <i class="icon-tag"></i>
                                    {{ trans('cart.have_promo_code') }}
                                </button>
                            </div>
                            
                            <div class="promo-code-form" style="display: none;">
                                <div class="promo-input-group">
                                    <input 
                                        type="text" 
                                        class="promo-input" 
                                        placeholder="{{ trans('cart.enter_promo_code') }}"
                                        id="promo-code"
                                    >
                                    <button type="button" class="btn btn-secondary apply-promo-btn">
                                        {{ trans('cart.apply') }}
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        {# Checkout Actions #}
                        <div class="checkout-actions">
                            <button class="btn btn-primary btn-large checkout-btn">
                                <i class="icon-credit-card"></i>
                                {{ trans('cart.proceed_to_checkout') }}
                            </button>
                            
                            <div class="payment-methods">
                                <span class="payment-label">{{ trans('cart.we_accept') }}:</span>
                                <div class="payment-icons">
                                    <img src="{{ 'assets/images/visa.svg'|asset }}" alt="Visa" class="payment-icon">
                                    <img src="{{ 'assets/images/mastercard.svg'|asset }}" alt="Mastercard" class="payment-icon">
                                    <img src="{{ 'assets/images/paypal.svg'|asset }}" alt="PayPal" class="payment-icon">
                                    <img src="{{ 'assets/images/apple-pay.svg'|asset }}" alt="Apple Pay" class="payment-icon">
                                </div>
                            </div>
                        </div>
                        
                        {# Security Badge #}
                        <div class="security-badge">
                            <i class="icon-shield"></i>
                            <span>{{ trans('cart.secure_checkout') }}</span>
                        </div>
                    </div>
                    
                    {# Shipping Information #}
                    <div class="shipping-info-card">
                        <h4>{{ trans('cart.shipping_info') }}</h4>
                        <div class="shipping-options">
                            <div class="shipping-option">
                                <i class="icon-truck"></i>
                                <div class="shipping-details">
                                    <strong>{{ trans('cart.free_shipping') }}</strong>
                                    <p>{{ trans('cart.free_shipping_desc') }}</p>
                                </div>
                            </div>
                            <div class="shipping-option">
                                <i class="icon-zap"></i>
                                <div class="shipping-details">
                                    <strong>{{ trans('cart.express_shipping') }}</strong>
                                    <p>{{ trans('cart.express_shipping_desc') }}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
        {% else %}
            {# Empty Cart #}
            <div class="empty-cart">
                <div class="empty-cart-content">
                    <div class="empty-cart-icon">
                        <i class="icon-shopping-cart"></i>
                    </div>
                    <h2 class="empty-cart-title">{{ trans('cart.empty_cart') }}</h2>
                    <p class="empty-cart-description">{{ trans('cart.empty_cart_description') }}</p>
                    
                    <div class="empty-cart-actions">
                        <a href="{{ store.url }}/products" class="btn btn-primary btn-large">
                            <i class="icon-shopping-bag"></i>
                            {{ trans('cart.start_shopping') }}
                        </a>
                    </div>
                    
                    {# Recently Viewed Products #}
                    <div class="recently-viewed-section">
                        <h3>{{ trans('cart.recently_viewed') }}</h3>
                        <div class="recently-viewed-products" id="recently-viewed-cart">
                            {# Products will be populated by JavaScript #}
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}
    </div>
</section>

{# Recommended Products #}
{% if cart and cart.items %}
<section class="recommended-products-section">
    <div class="container">
        <div class="section-header">
            <h2 class="section-title">{{ trans('cart.you_might_like') }}</h2>
        </div>
        
        <div class="recommended-products-slider">
            {# Demo recommended products #}
            {% set recommended_products = [
                {
                    'id': 13,
                    'name': 'Wireless Charging Pad',
                    'price': 49.00,
                    'image': '/images/wireless-charging-pad.jpg',
                    'rating': 4.5,
                    'reviews_count': 123,
                    'url': '/product/wireless-charging-pad'
                },
                {
                    'id': 14,
                    'name': 'USB-C Cable',
                    'price': 19.00,
                    'original_price': 25.00,
                    'image': '/images/usb-c-cable.jpg',
                    'rating': 4.7,
                    'reviews_count': 89,
                    'badges': ['sale'],
                    'url': '/product/usb-c-cable'
                },
                {
                    'id': 15,
                    'name': 'Phone Stand',
                    'price': 29.00,
                    'image': '/images/phone-stand.jpg',
                    'rating': 4.3,
                    'reviews_count': 67,
                    'url': '/product/phone-stand'
                },
                {
                    'id': 16,
                    'name': 'Screen Protector',
                    'price': 15.00,
                    'image': '/images/screen-protector.jpg',
                    'rating': 4.6,
                    'reviews_count': 234,
                    'badges': ['bestseller'],
                    'url': '/product/screen-protector'
                }
            ] %}
            
            <div class="products-grid">
                {% for product in recommended_products %}
                    {% include 'partials.product.card' with {'product': product} %}
                {% endfor %}
            </div>
        </div>
    </div>
</section>
{% endif %}

{# Cart Notification Toast #}
<div class="cart-notification" id="cart-notification">
    <div class="notification-content">
        <i class="notification-icon"></i>
        <span class="notification-message"></span>
    </div>
</div>

{% endblock %}

{% block styles %}
<link rel="stylesheet" href="{{ 'assets/styles/components.css'|asset }}">
<style>
/* Cart Page Styles */

.cart-section {
    padding: 3rem 0;
}

.cart-layout {
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: 3rem;
    align-items: start;
}

/* Cart Items */
.cart-items {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-light);
    overflow: hidden;
}

.cart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2rem;
    border-bottom: 1px solid var(--border-color);
}

.cart-header h2 {
    font-size: 1.5rem;
    font-weight: var(--font-weight-semibold);
    color: var(--text-color);
    margin: 0;
}

.clear-cart-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: none;
    border: 1px solid var(--border-color);
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius);
    color: var(--text-light);
    cursor: pointer;
    transition: var(--transition);
    font-size: 0.875rem;
}

.clear-cart-btn:hover {
    border-color: #dc3545;
    color: #dc3545;
    background: rgba(220, 53, 69, 0.05);
}

.cart-items-list {
    padding: 0;
}

.cart-item {
    display: grid;
    grid-template-columns: 120px 1fr auto;
    gap: 1.5rem;
    padding: 2rem;
    border-bottom: 1px solid var(--border-color);
    transition: var(--transition);
}

.cart-item:last-child {
    border-bottom: none;
}

.cart-item:hover {
    background: var(--background-light);
}

.item-image {
    width: 120px;
    height: 120px;
    border-radius: var(--border-radius);
    overflow: hidden;
    background: var(--background-light);
}

.item-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition);
}

.item-image:hover img {
    transform: scale(1.05);
}

.item-details {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 1rem;
}

.item-info {
    flex: 1;
}

.item-name {
    font-size: 1.125rem;
    font-weight: var(--font-weight-semibold);
    margin-bottom: 0.5rem;
}

.item-name a {
    color: var(--text-color);
    text-decoration: none;
    transition: var(--transition);
}

.item-name a:hover {
    color: var(--primary-color);
}

.item-variant {
    color: var(--text-light);
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
}

.item-options {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 0.75rem;
}

.item-option {
    font-size: 0.875rem;
    color: var(--text-light);
}

.item-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 0.875rem;
}

.item-sku {
    color: var(--text-muted);
}

.item-stock {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-weight: var(--font-weight-medium);
}

.item-stock.in-stock {
    color: #28a745;
}

.item-stock.out-of-stock {
    color: #dc3545;
}

.item-actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.quantity-controls {
    display: flex;
    align-items: center;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    overflow: hidden;
    width: fit-content;
}

.quantity-btn {
    width: 36px;
    height: 36px;
    background: var(--background-light);
    border: none;
    cursor: pointer;
    transition: var(--transition);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-color);
}

.quantity-btn:hover:not(:disabled) {
    background: var(--primary-color);
    color: white;
}

.quantity-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.quantity-input {
    width: 50px;
    height: 36px;
    border: none;
    text-align: center;
    font-weight: var(--font-weight-medium);
    background: white;
}

.quantity-input:focus {
    outline: none;
}

.item-secondary-actions {
    display: flex;
    gap: 0.5rem;
}

.action-btn {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    background: none;
    border: none;
    color: var(--text-light);
    cursor: pointer;
    font-size: 0.875rem;
    padding: 0.25rem 0;
    transition: var(--transition);
}

.action-btn:hover {
    color: var(--primary-color);
}

.action-btn.remove-item:hover {
    color: #dc3545;
}

.item-pricing {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 0.5rem;
    text-align: right;
}

.item-price {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.current-price {
    font-size: 1.125rem;
    font-weight: var(--font-weight-semibold);
    color: var(--text-color);
}

.original-price {
    font-size: 0.875rem;
    color: var(--text-muted);
    text-decoration: line-through;
}

.item-total {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    margin-top: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid var(--border-color);
}

.total-label {
    font-size: 0.875rem;
    color: var(--text-light);
}

.total-price {
    font-size: 1.25rem;
    font-weight: var(--font-weight-bold);
    color: #28a745;
}

.continue-shopping {
    padding: 2rem;
    border-top: 1px solid var(--border-color);
    background: var(--background-light);
}

/* Cart Summary */
.cart-summary {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    position: sticky;
    top: 100px;
}

.summary-card {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-light);
    padding: 2rem;
}

.summary-title {
    font-size: 1.25rem;
    font-weight: var(--font-weight-semibold);
    margin-bottom: 1.5rem;
    color: var(--text-color);
}

.summary-details {
    margin-bottom: 1.5rem;
}

.summary-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 0;
    border-bottom: 1px solid var(--border-color);
}

.summary-row:last-child {
    border-bottom: none;
}

.summary-row.discount .summary-value {
    color: #28a745;
}

.summary-row.total {
    font-size: 1.125rem;
    font-weight: var(--font-weight-bold);
    padding-top: 1rem;
    border-top: 2px solid var(--border-color);
    margin-top: 0.5rem;
}

.summary-row.total .summary-value {
    color: #28a745;
    font-size: 1.25rem;
}

.summary-label {
    color: var(--text-color);
}

.summary-value {
    font-weight: var(--font-weight-medium);
    color: var(--text-color);
}

/* Promo Code */
.promo-code-section {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid var(--border-color);
}

.promo-toggle-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: none;
    border: none;
    color: var(--primary-color);
    cursor: pointer;
    font-weight: var(--font-weight-medium);
    transition: var(--transition);
}

.promo-toggle-btn:hover {
    color: var(--primary-hover);
}

.promo-code-form {
    margin-top: 1rem;
}

.promo-input-group {
    display: flex;
    gap: 0.5rem;
}

.promo-input {
    flex: 1;
    padding: 0.75rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 0.875rem;
}

.promo-input:focus {
    outline: none;
    border-color: var(--primary-color);
}

/* Checkout Actions */
.checkout-actions {
    margin-bottom: 1.5rem;
}

.checkout-btn {
    width: 100%;
    margin-bottom: 1rem;
}

.payment-methods {
    text-align: center;
}

.payment-label {
    display: block;
    font-size: 0.875rem;
    color: var(--text-light);
    margin-bottom: 0.5rem;
}

.payment-icons {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    flex-wrap: wrap;
}

.payment-icon {
    height: 24px;
    width: auto;
    opacity: 0.7;
    transition: var(--transition);
}

.payment-icon:hover {
    opacity: 1;
}

.security-badge {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    color: #28a745;
    font-size: 0.875rem;
    font-weight: var(--font-weight-medium);
}

/* Shipping Info Card */
.shipping-info-card {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-light);
    padding: 1.5rem;
}

.shipping-info-card h4 {
    font-size: 1rem;
    font-weight: var(--font-weight-semibold);
    margin-bottom: 1rem;
    color: var(--text-color);
}

.shipping-options {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.shipping-option {
    display: flex;
    gap: 0.75rem;
    padding: 0.75rem;
    background: var(--background-light);
    border-radius: var(--border-radius);
}

.shipping-option i {
    color: var(--primary-color);
    font-size: 1.25rem;
    margin-top: 0.125rem;
}

.shipping-details strong {
    display: block;
    color: var(--text-color);
    margin-bottom: 0.25rem;
}

.shipping-details p {
    color: var(--text-light);
    font-size: 0.875rem;
    margin: 0;
}

/* Empty Cart */
.empty-cart {
    text-align: center;
    padding: 4rem 2rem;
}

.empty-cart-content {
    max-width: 500px;
    margin: 0 auto;
}

.empty-cart-icon {
    font-size: 5rem;
    color: var(--text-muted);
    margin-bottom: 2rem;
}

.empty-cart-title {
    font-size: 2rem;
    font-weight: var(--font-weight-bold);
    margin-bottom: 1rem;
    color: var(--text-color);
}

.empty-cart-description {
    color: var(--text-light);
    margin-bottom: 2rem;
    line-height: 1.6;
}

.empty-cart-actions {
    margin-bottom: 3rem;
}

.recently-viewed-section h3 {
    font-size: 1.25rem;
    font-weight: var(--font-weight-semibold);
    margin-bottom: 1.5rem;
    color: var(--text-color);
}

.recently-viewed-products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
}

/* Recommended Products */
.recommended-products-section {
    padding: 4rem 0;
    background: var(--background-light);
}

.recommended-products-slider .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
}

/* Cart Notification */
.cart-notification {
    position: fixed;
    top: 100px;
    right: 2rem;
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-heavy);
    padding: 1rem 1.5rem;
    transform: translateX(400px);
    transition: var(--transition);
    z-index: 1000;
    border-left: 4px solid #28a745;
}

.cart-notification.show {
    transform: translateX(0);
}

.cart-notification.error {
    border-left-color: #dc3545;
}

.notification-content {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.notification-icon {
    font-size: 1.25rem;
    color: #28a745;
}

.cart-notification.error .notification-icon {
    color: #dc3545;
}

.notification-message {
    font-weight: var(--font-weight-medium);
    color: var(--text-color);
}

/* Responsive Design */
@media (max-width: 1024px) {
    .cart-layout {
        grid-template-columns: 1fr 350px;
        gap: 2rem;
    }
    
    .cart-item {
        grid-template-columns: 100px 1fr auto;
        gap: 1rem;
    }
    
    .item-image {
        width: 100px;
        height: 100px;
    }
}

@media (max-width: 768px) {
    .cart-layout {
        grid-template-columns: 1fr;
        gap: 2rem;
    }
    
    .cart-summary {
        position: static;
        order: -1;
    }
    
    .cart-item {
        grid-template-columns: 80px 1fr;
        gap: 1rem;
    }
    
    .item-pricing {
        grid-column: 1 / -1;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid var(--border-color);
    }
    
    .item-total {
        border: none;
        padding: 0;
        margin: 0;
    }
    
    .cart-header {
        flex-direction: column;
        gap: 1rem;
        align-items: stretch;
    }
    
    .cart-header h2 {
        text-align: center;
    }
    
    .summary-card {
        padding: 1.5rem;
    }
    
    .cart-notification {
        right: 1rem;
        left: 1rem;
        transform: translateY(-100px);
    }
    
    .cart-notification.show {
        transform: translateY(0);
    }
}

@media (max-width: 576px) {
    .cart-section {
        padding: 2rem 0;
    }
    
    .cart-item {
        padding: 1.5rem;
        grid-template-columns: 1fr;
        text-align: center;
    }
    
    .item-image {
        width: 120px;
        height: 120px;
        margin: 0 auto;
    }
    
    .item-actions {
        align-items: center;
    }
    
    .item-secondary-actions {
        justify-content: center;
    }
    
    .summary-card {
        padding: 1rem;
    }
    
    .promo-input-group {
        flex-direction: column;
    }
    
    .recommended-products-slider .products-grid {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }
}
</style>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Cart functionality
    let cartData = {
        items: [],
        subtotal: 0,
        discount: 0,
        shipping: 0,
        tax: 0,
        total: 0
    };
    
    // Quantity controls
    const quantityButtons = document.querySelectorAll('.quantity-btn');
    const quantityInputs = document.querySelectorAll('.quantity-input');
    
    quantityButtons.forEach(button => {
        button.addEventListener('click', function() {
            const itemId = this.dataset.itemId;
            const input = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`);
            const isIncrease = this.classList.contains('quantity-increase');
            const isDecrease = this.classList.contains('quantity-decrease');
            
            let currentValue = parseInt(input.value);
            const minValue = parseInt(input.min);
            const maxValue = parseInt(input.max);
            
            if (isIncrease && currentValue < maxValue) {
                input.value = currentValue + 1;
                updateItemQuantity(itemId, currentValue + 1);
            } else if (isDecrease && currentValue > minValue) {
                input.value = currentValue - 1;
                updateItemQuantity(itemId, currentValue - 1);
            }
            
            // Update button states
            const decreaseBtn = document.querySelector(`.quantity-decrease[data-item-id="${itemId}"]`);
            const increaseBtn = document.querySelector(`.quantity-increase[data-item-id="${itemId}"]`);
            
            decreaseBtn.disabled = input.value <= minValue;
            increaseBtn.disabled = input.value >= maxValue;
        });
    });
    
    quantityInputs.forEach(input => {
        input.addEventListener('change', function() {
            const itemId = this.dataset.itemId;
            const value = parseInt(this.value);
            const min = parseInt(this.min);
            const max = parseInt(this.max);
            
            if (value < min) {
                this.value = min;
            } else if (value > max) {
                this.value = max;
            }
            
            updateItemQuantity(itemId, parseInt(this.value));
        });
    });
    
    // Remove item functionality
    const removeButtons = document.querySelectorAll('.remove-item');
    removeButtons.forEach(button => {
        button.addEventListener('click', function() {
            const itemId = this.dataset.itemId;
            const cartItem = document.querySelector(`.cart-item[data-item-id="${itemId}"]`);
            
            if (confirm('{{ trans("cart.confirm_remove") }}')) {
                cartItem.style.opacity = '0.5';
                cartItem.style.pointerEvents = 'none';
                
                setTimeout(() => {
                    cartItem.remove();
                    updateCartSummary();
                    showNotification('{{ trans("cart.item_removed") }}', 'success');
                    
                    // Check if cart is empty
                    const remainingItems = document.querySelectorAll('.cart-item');
                    if (remainingItems.length === 0) {
                        location.reload(); // Reload to show empty cart
                    }
                }, 300);
            }
        });
    });
    
    // Move to wishlist functionality
    const moveToWishlistButtons = document.querySelectorAll('.move-to-wishlist');
    moveToWishlistButtons.forEach(button => {
        button.addEventListener('click', function() {
            const itemId = this.dataset.itemId;
            const cartItem = document.querySelector(`.cart-item[data-item-id="${itemId}"]`);
            const productName = cartItem.querySelector('.item-name a').textContent;
            
            // Simulate moving to wishlist
            cartItem.style.opacity = '0.5';
            cartItem.style.pointerEvents = 'none';
            
            setTimeout(() => {
                cartItem.remove();
                updateCartSummary();
                showNotification(`${productName} {{ trans("cart.moved_to_wishlist") }}`, 'success');
                
                // Check if cart is empty
                const remainingItems = document.querySelectorAll('.cart-item');
                if (remainingItems.length === 0) {
                    location.reload(); // Reload to show empty cart
                }
            }, 300);
        });
    });
    
    // Clear cart functionality
    const clearCartBtn = document.querySelector('.clear-cart-btn');
    if (clearCartBtn) {
        clearCartBtn.addEventListener('click', function() {
            if (confirm('{{ trans("cart.confirm_clear") }}')) {
                const cartItems = document.querySelectorAll('.cart-item');
                cartItems.forEach(item => {
                    item.style.opacity = '0.5';
                    item.style.pointerEvents = 'none';
                });
                
                setTimeout(() => {
                    location.reload(); // Reload to show empty cart
                }, 500);
            }
        });
    }
    
    // Promo code functionality
    const promoToggleBtn = document.querySelector('.promo-toggle-btn');
    const promoCodeForm = document.querySelector('.promo-code-form');
    const applyPromoBtn = document.querySelector('.apply-promo-btn');
    const promoInput = document.getElementById('promo-code');
    
    if (promoToggleBtn && promoCodeForm) {
        promoToggleBtn.addEventListener('click', function() {
            const isVisible = promoCodeForm.style.display !== 'none';
            promoCodeForm.style.display = isVisible ? 'none' : 'block';
            
            if (!isVisible) {
                promoInput.focus();
            }
        });
    }
    
    if (applyPromoBtn && promoInput) {
        applyPromoBtn.addEventListener('click', function() {
            const promoCode = promoInput.value.trim();
            
            if (!promoCode) {
                showNotification('{{ trans("cart.enter_promo_code") }}', 'error');
                return;
            }
            
            // Show loading state
            const originalText = this.textContent;
            this.textContent = '{{ trans("cart.applying") }}...';
            this.disabled = true;
            
            // Simulate API call
            setTimeout(() => {
                // Demo promo codes
                const validCodes = {
                    'SAVE10': { discount: 10, type: 'percentage' },
                    'WELCOME': { discount: 5, type: 'fixed' },
                    'FREESHIP': { discount: 0, type: 'shipping' }
                };
                
                if (validCodes[promoCode.toUpperCase()]) {
                    const promo = validCodes[promoCode.toUpperCase()];
                    applyPromoCode(promo);
                    showNotification('{{ trans("cart.promo_applied") }}', 'success');
                    promoCodeForm.style.display = 'none';
                } else {
                    showNotification('{{ trans("cart.invalid_promo") }}', 'error');
                }
                
                // Reset button
                this.textContent = originalText;
                this.disabled = false;
            }, 1500);
        });
        
        promoInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                applyPromoBtn.click();
            }
        });
    }
    
    // Checkout button
    const checkoutBtn = document.querySelector('.checkout-btn');
    if (checkoutBtn) {
        checkoutBtn.addEventListener('click', function() {
            // Show loading state
            const originalText = this.innerHTML;
            this.innerHTML = '<i class="icon-loader"></i> {{ trans("cart.processing") }}...';
            this.disabled = true;
            
            // Simulate processing
            setTimeout(() => {
                window.location.href = '/checkout';
            }, 1000);
        });
    }
    
    // Helper functions
    function updateItemQuantity(itemId, quantity) {
        const cartItem = document.querySelector(`.cart-item[data-item-id="${itemId}"]`);
        const priceElement = cartItem.querySelector('.current-price');
        const totalElement = cartItem.querySelector('.total-price');
        
        const price = parseFloat(priceElement.textContent.replace(/[^\d.]/g, ''));
        const newTotal = price * quantity;
        
        totalElement.textContent = formatCurrency(newTotal);
        
        updateCartSummary();
        showNotification('{{ trans("cart.quantity_updated") }}', 'success');
    }
    
    function updateCartSummary() {
        const cartItems = document.querySelectorAll('.cart-item');
        let subtotal = 0;
        
        cartItems.forEach(item => {
            const totalElement = item.querySelector('.total-price');
            const total = parseFloat(totalElement.textContent.replace(/[^\d.]/g, ''));
            subtotal += total;
        });
        
        const subtotalElement = document.querySelector('.summary-row:not(.discount):not(.total) .summary-value');
        const totalElement = document.querySelector('.summary-row.total .summary-value');
        
        if (subtotalElement) {
            subtotalElement.textContent = formatCurrency(subtotal);
        }
        
        // Calculate total (simplified)
        const shipping = 0; // Free shipping
        const tax = subtotal * 0.08; // 8% tax
        const discount = parseFloat(document.querySelector('.summary-row.discount .summary-value')?.textContent.replace(/[^\d.]/g, '') || 0);
        const total = subtotal + shipping + tax - discount;
        
        if (totalElement) {
            totalElement.textContent = formatCurrency(total);
        }
        
        // Update header cart count
        const cartCount = document.querySelector('.cart-count');
        if (cartCount) {
            cartCount.textContent = cartItems.length;
            cartCount.dataset.count = cartItems.length;
        }
    }
    
    function applyPromoCode(promo) {
        const discountRow = document.querySelector('.summary-row.discount');
        const discountValue = discountRow?.querySelector('.summary-value');
        
        if (promo.type === 'percentage') {
            const subtotal = parseFloat(document.querySelector('.summary-row:not(.discount):not(.total) .summary-value').textContent.replace(/[^\d.]/g, ''));
            const discount = subtotal * (promo.discount / 100);
            
            if (discountValue) {
                discountValue.textContent = '-' + formatCurrency(discount);
            }
        } else if (promo.type === 'fixed') {
            if (discountValue) {
                discountValue.textContent = '-' + formatCurrency(promo.discount);
            }
        }
        
        updateCartSummary();
    }
    
    function formatCurrency(amount) {
        return new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD'
        }).format(amount);
    }
    
    function showNotification(message, type = 'success') {
        const notification = document.getElementById('cart-notification');
        const icon = notification.querySelector('.notification-icon');
        const messageElement = notification.querySelector('.notification-message');
        
        // Set content
        messageElement.textContent = message;
        
        // Set icon and style
        notification.className = 'cart-notification';
        if (type === 'error') {
            notification.classList.add('error');
            icon.className = 'notification-icon icon-x-circle';
        } else {
            icon.className = 'notification-icon icon-check-circle';
        }
        
        // Show notification
        notification.classList.add('show');
        
        // Hide after 3 seconds
        setTimeout(() => {
            notification.classList.remove('show');
        }, 3000);
    }
    
    // Display recently viewed products in empty cart
    function displayRecentlyViewed() {
        const recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');
        const container = document.getElementById('recently-viewed-cart');
        
        if (recentlyViewed.length > 0 && container) {
            container.innerHTML = recentlyViewed.slice(0, 4).map(product => `
                <div class="product-card">
                    <div class="product-image-container">
                        <a href="${product.url}">
                            <img src="${product.image}" alt="${product.name}" class="product-image">
                        </a>
                    </div>
                    <div class="product-info">
                        <h3 class="product-title">
                            <a href="${product.url}">${product.name}</a>
                        </h3>
                        <div class="product-price">
                            <span class="current-price">$${product.price}</span>
                        </div>
                        <button class="btn btn-primary btn-small quick-add-btn" data-product-id="${product.id}">
                            <i class="icon-plus"></i>
                            {{ trans("cart.quick_add") }}
                        </button>
                    </div>
                </div>
            `).join('');
            
            // Add quick add functionality
            container.querySelectorAll('.quick-add-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const productId = this.dataset.productId;
                    const productCard = this.closest('.product-card');
                    const productName = productCard.querySelector('.product-title a').textContent;
                    
                    // Simulate adding to cart
                    const originalText = this.innerHTML;
                    this.innerHTML = '<i class="icon-loader"></i>';
                    this.disabled = true;
                    
                    setTimeout(() => {
                        showNotification(`${productName} {{ trans("cart.added_to_cart") }}`, 'success');
                        this.innerHTML = originalText;
                        this.disabled = false;
                    }, 1000);
                });
            });
        } else if (container) {
            container.closest('.recently-viewed-section').style.display = 'none';
        }
    }
    
    // Initialize recently viewed products for empty cart
    if (document.querySelector('.empty-cart')) {
        displayRecentlyViewed();
    }
    
    // Initialize cart summary
    updateCartSummary();
});
</script>
{% endblock %}

